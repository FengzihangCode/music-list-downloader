name: Build and Release Electron App

on:
  push:
    branches:
      - main

jobs:
  build-macos:
    name: Build macOS (arm64 and x64)
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64, x64] # 构建两种架构
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # 替换为你的 Node.js 版本
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the app
        run: pnpm -F ui build
        env:
          ELECTRON_BUILD_ARCH: ${{ matrix.arch }}

      - name: Archive build artifacts
        run: mkdir -p dist && mv ./ui/release/*.dmg ./dist/

      - name: Upload to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          repo: ${{ github.repository }}
          release_id: ${{ steps.create_release.outputs.id }}
          asset_path: ./dist/*.dmg
          asset_name: ${{ matrix.arch }}-${{ github.ref_name }}.dmg
          content_type: application/octet-stream

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # 替换为你的 Node.js 版本
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the app
        run: pnpm -F ui build

      - name: Archive build artifacts
        run: mkdir -p dist && move ./ui/release/*.exe ./dist/

      - name: Upload to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          repo: ${{ github.repository }}
          release_id: ${{ steps.create_release.outputs.id }}
          asset_path: ./dist/*.exe
          asset_name: windows-${{ github.ref_name }}.exe
          content_type: application/octet-stream

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
